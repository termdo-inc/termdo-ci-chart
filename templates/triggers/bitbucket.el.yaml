apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: bitbucket-el
spec:
  serviceAccountName: tekton-sa
  triggers:

    - name: dev-refs-changed-trigger
      interceptors:
        - ref:
            name: bitbucket
          params:
            - name: secretRef
              value:
                secretName: webhook-secret
                secretKey: token
            - name: eventTypes
              value:
                - repo:refs_changed
        - ref:
            name: cel
          params:
            - name: filter
              value: >
                body.changes.exists(c,
                  c.ref.type == "BRANCH" &&
                  c.ref.displayId == "{{ .Values.bitbucket.branch.dev }}" &&
                  c.type == "UPDATE"
                )
            - name: overlays
              value:
                - key: env
                  expression: '"dev"'
                - key: url
                  expression: >
                    body.repository.links.clone
                      .filter(c, c.name == "ssh")
                      .first().href
                - key: revision
                  expression: >
                    body.changes.filter(c,
                      c.ref.type == "BRANCH" &&
                      c.ref.displayId == "{{ .Values.bitbucket.branch.dev }}" &&
                      c.type == "UPDATE"
                    ).first().toHash
                - key: repository
                  expression: body.repository.slug
      bindings:
        - ref: refs-changed-tb
      template:
        ref: refs-changed-tt

    - name: test-refs-changed-trigger
      interceptors:
        - ref:
            name: bitbucket
          params:
            - name: secretRef
              value:
                secretName: webhook-secret
                secretKey: token
            - name: eventTypes
              value:
                - repo:refs_changed
        - ref:
            name: cel
          params:
            - name: filter
              value: >
                body.changes.exists(c,
                  c.ref.type == "BRANCH" &&
                  c.ref.displayId == "{{ .Values.bitbucket.branch.test }}" &&
                  c.type == "UPDATE"
                )
            - name: overlays
              value:
                - key: env
                  expression: '"test"'
                - key: url
                  expression: >
                    body.repository.links.clone
                      .filter(c, c.name == "ssh")
                      .first().href
                - key: revision
                  expression: >
                    body.changes.filter(c,
                      c.ref.type == "BRANCH" &&
                      c.ref.displayId == "{{ .Values.bitbucket.branch.test }}" &&
                      c.type == "UPDATE"
                    ).first().toHash
                - key: repository
                  expression: body.repository.slug
      bindings:
        - ref: refs-changed-tb
      template:
        ref: refs-changed-tt

    - name: prod-refs-changed-trigger
      interceptors:
        - ref:
            name: bitbucket
          params:
            - name: secretRef
              value:
                secretName: webhook-secret
                secretKey: token
            - name: eventTypes
              value:
                - repo:refs_changed
        - ref:
            name: cel
          params:
            - name: filter
              value: >
                body.changes.exists(c,
                  c.ref.type == "TAG" &&
                  c.type == "ADD"
                )
            - name: overlays
              value:
                - key: env
                  expression: '"prod"'
                - key: url
                  expression: >
                    body.repository.links.clone
                      .filter(c, c.name == "ssh")
                      .first().href
                - key: revision
                  expression: >
                    body.changes.filter(c,
                      c.ref.type == "TAG" &&
                      c.type == "ADD"
                    ).first().ref.displayId
                - key: repository
                  expression: body.repository.slug
      bindings:
        - ref: refs-changed-tb
      template:
        ref: refs-changed-tt

  resources:
    kubernetesResource:
      serviceType: NodePort
      servicePort: {{ .Values.bitbucket.eventListener.nodePort }}
